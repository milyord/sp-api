on:
  push:
    branches:
      - main
permissions:
  contents: write
  pull-requests: write
name: Run Release Please
jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare release
        id: release
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: python
          package-name: sp-api
          default-branch: main
          bootstrap-sha: 93fc5e9fc0290ae5765bd94e530ec73228ebb866
      - name: Checkout repository
        uses: actions/checkout@v3
        if: steps.release.outputs.release_created
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
        if: steps.release.outputs.release_created
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
        if: steps.release.outputs.release_created
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
        if: steps.release.outputs.release_created
      - name: Install dependencies
        run: poetry install
        if: steps.release.outputs.release_created && steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Build project
        run: poetry build
        if: steps.release.outputs.release_created
      - name: Upload artifacts
        if: ${{ steps.release.outputs.release_created }}
        uses: svenstaro/upload-release-action@v2
        with:
          tag: ${{ steps.release.outputs.tag_name }}
          file: "dist/*"
          file_glob: true
          overwrite: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}
